<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<!-- ############################## PROJECT INFO ############################## -->
	<groupId>com.github.ssardina-agts</groupId>
	<artifactId>sarl-prolog-cap</artifactId>
	<version>4.0.0.10.0</version>

    <name>SARL Capacity for SWI Prolog Connectivity</name>
    <url>https://github.com/ssardina-agts/sarl-prolog-cap</url>
    <description>
    	Capacities and Skills for SARL to connect to SWI Prolog system.
		Relies on JPL (https://jpl7.org/)
	</description>

  	<developers>
    	<developer>
	      <name>Sebastian Sardina</name>
	      <email>ssardina@gmail.com</email>
	      <organization>ssardina-agts</organization>
	      <organizationUrl>https://github.com/ssardina-agts</organizationUrl>
	    </developer>
  	</developers>

  	<licenses>
	    <license>
	      <name>GNU General Public License, Version 3.0</name>
	      <url>https://www.gnu.org/licenses/gpl-3.0.en.html</url>
	    </license>
  	</licenses>

 	<!-- ############################## PROPERTIES ############################## -->
    <properties>
        <!-- SARL framework version and configuration -->
        <sarl.version>0.10.0</sarl.version>

        <!-- JANUS project version -->
        <janus.version>2.${sarl.version}</janus.version>

        <!-- JAVA compiler version to be used -->
	    <maven.compiler.source>1.8</maven.compiler.source>
	    <maven.compiler.target>1.8</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        
        <skipTests>true</skipTests>
    </properties>
    
   	<!-- ############################## REPOSITORIES ############################## -->
	<repositories>
		<!-- JANUS Project kernel (contains SARL language core) -->
		<repository>
			<id>io.sarl-maven</id>
			<name>SARL Snapshots</name>
			<url>http://maven.sarl.io/</url>
		</repository>

  		<repository>
          <id>com.github</id>
          <name>GitHub SWI-Prolog/packages-jpl Apache Maven Packages</name>
          <url>https://maven.pkg.github.com/SWI-Prolog/packages-jpl/</url>
        </repository>
        
        <!-- JitPack used for getting Maven packages from GitHub -->
        <repository>
            <id>jitpack.io</id>
            <name>JitPack Repository</name>
            <url>https://jitpack.io</url>
        </repository>
        
	
	</repositories>
	
	
	<pluginRepositories>
		  <pluginRepository>
		    <id>io.sarl-maven</id>
		    <name>SARL Snapshots</name>
		    <url>http://maven.sarl.io/</url>
		    <snapshots>
		      <enabled>true</enabled>
		    </snapshots>
		  </pluginRepository>
	</pluginRepositories>

    

  	<!-- ############################## DEPENDENCIES ############################## -->
    <dependencies>
        <!-- JANUS Project kernel (contains SARL language core) -->
        <dependency>
            <groupId>io.janusproject</groupId>
            <artifactId>io.janusproject.kernel</artifactId>
            <version>${janus.version}</version>
            
            <exclusions>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.equinox.common</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.equinox.preferences</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.equinox.registry</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.equinox.registry</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.core.jobs</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.core.contenttype</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.equinox.app</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.osgi</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.core.runtime</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.core.filesystem</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.core.runtime</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.core.resources</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.platform</groupId>
                <artifactId>org.eclipse.text</artifactId>
              </exclusion>
              <exclusion>
                <groupId>org.eclipse.jdt</groupId>
                <artifactId>org.eclipse.jdt.core</artifactId>
              </exclusion>
            </exclusions>
        </dependency>

		<!-- https://mvnrepository.com/artifact/org.apache.commons/commons-lang3 -->
		<dependency>
		    <groupId>org.apache.commons</groupId>
		    <artifactId>commons-lang3</artifactId>
		    <version>3.7</version>
		</dependency>
        

       	<!--  JUNIT for unit testing  -->
        <dependency>
          <groupId>junit</groupId>
          <artifactId>junit</artifactId>
          <version>4.13.1</version>
		</dependency>

       	
       	<!--  JPL bidirectional Prolog-Java: https://github.com/SWI-Prolog/packages-jpl  -->
		<dependency>
			<groupId>com.github.SWI-Prolog</groupId>
			<artifactId>packages-jpl</artifactId>
			<version>V8.3.2</version>	<!-- version 7.6.1 of JPL -->
		</dependency>


    </dependencies>

    <dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-api</artifactId>
				<version>1.7.25</version>
			</dependency>
		</dependencies>
	</dependencyManagement>
        

   



   	<!-- ############################## BUILD PIPELINE PLUGINS ############################## -->
	<build>
		<resources>
			<resource>
				<directory>src/main/sarl</directory>
				<filtering>false</filtering>
			</resource>
			<resource>
				<directory>src/main/java</directory>
				<filtering>false</filtering>
			</resource>
		</resources>

		<testSourceDirectory>src/test/java/io/sarl/extras</testSourceDirectory>


		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>1.6</source>
					<target>1.6</target>
				</configuration>
			</plugin>

			<plugin>
				<!-- SARL Maven compiler plugin -->
				<!-- Facilitate compilation of SARL source code to Java classes -->
				<groupId>io.sarl.maven</groupId>
				<artifactId>sarl-maven-plugin</artifactId>
				<version>${sarl.version}</version>
				<extensions>true</extensions>
				<configuration>
					<source>${maven.compiler.source}</source>
					<target>${maven.compiler.target}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>

			<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-javadoc-plugin</artifactId> 
				<executions> <execution> <id>attach-javadocs</id> <goals> <goal>jar</goal> 
				</goals> </execution> </executions> </plugin> -->
			<!-- Attach sources -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>3.0.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- https://maven.apache.org/surefire/maven-surefire-plugin/ The Surefire 
				Plugin is used during the test phase of the build lifecycle to execute the 
				unit tests of an application. It generates reports in two different file 
				formats: -->
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.19.1</version>
				<configuration>
					<!-- Check this: https://maven.apache.org/surefire/maven-surefire-plugin/examples/skipping-tests.html -->
					<skipTests>${skipTests}</skipTests>
				</configuration>
			</plugin>

			<!-- Class to execute via maven exec:java https://www.mojohaus.org/exec-maven-plugin/ -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<configuration>
					<!-- <mainClass>io.janusproject.Boot</mainClass> -->
					<mainClass>BootTestAgt</mainClass>
				</configuration>
			</plugin>
		</plugins>
	</build>

</project>
